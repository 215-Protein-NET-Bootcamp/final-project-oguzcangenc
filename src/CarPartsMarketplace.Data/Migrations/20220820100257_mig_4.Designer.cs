// <auto-generated />
using System;
using CarPartsMarketplace.Data.Context.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarPartsMarketplace.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220820100257_mig_4")]
    partial class mig_4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4966),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4976),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4977),
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4982),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4983),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(4983),
                            Name = "customer"
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(8674),
                            Email = "admin@admin.com",
                            EmailConfirmation = true,
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(8676),
                            LastName = "Admin",
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(8677),
                            PasswordHash = new byte[] { 182, 131, 172, 82, 28, 91, 201, 162, 36, 242, 204, 213, 253, 9, 1, 27, 204, 97, 216, 106, 185, 89, 58, 166, 226, 23, 59, 229, 181, 239, 232, 24, 13, 138, 17, 178, 250, 8, 30, 49, 46, 153, 48, 144, 57, 26, 42, 132, 11, 117, 229, 189, 224, 7, 3, 56, 239, 9, 16, 254, 19, 134, 101, 245 },
                            PasswordSalt = new byte[] { 171, 161, 143, 254, 245, 3, 147, 230, 167, 89, 253, 246, 242, 237, 213, 222, 51, 92, 18, 129, 138, 242, 21, 90, 148, 188, 118, 85, 190, 79, 175, 66, 246, 96, 57, 241, 215, 163, 127, 200, 97, 205, 189, 138, 0, 115, 188, 175, 77, 182, 119, 114, 32, 142, 247, 199, 57, 68, 186, 223, 214, 109, 187, 58, 197, 193, 215, 25, 222, 168, 158, 238, 12, 92, 225, 249, 191, 117, 65, 9, 62, 74, 14, 94, 99, 193, 138, 107, 64, 34, 154, 60, 13, 195, 31, 162, 1, 154, 153, 214, 59, 102, 120, 170, 195, 38, 205, 206, 66, 254, 172, 9, 145, 230, 65, 209, 32, 40, 58, 213, 9, 191, 23, 173, 143, 82, 87, 242 }
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(9802),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(9803),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 698, DateTimeKind.Utc).AddTicks(9801),
                            OperationClaimId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2932),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2934),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2933),
                            Name = "Dayco"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2937),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2938),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2937),
                            Name = "Ngk"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2939),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2940),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2939),
                            Name = "Bosch"
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4059),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4061),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4060),
                            Name = "Triger Kayışları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4064),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4065),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4064),
                            Name = "Ateşleme"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4066),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4067),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(4066),
                            Name = "Fren Sistemi"
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5130),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5132),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5131),
                            Name = "Siyah"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5136),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5137),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(5136),
                            Name = "Beyaz"
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOfferable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("PurchasingUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("UsageId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("UsageId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2471),
                            Description = "Dayco Triger Seti 1.2 16V Dacıa Logan Sandero Clio Kango Modus Symbol Twıngo",
                            ImageUrl = "placeholder.jpg",
                            IsDeleted = false,
                            IsOfferable = true,
                            IsSold = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2473),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2473),
                            Name = "Dayco Triger Seti 1.2 16V",
                            Price = 1500m,
                            PurchasingUserId = 0,
                            UsageId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            ColorId = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2479),
                            Description = "Kutu İçeriği: 4 adet NGK Spark Plugs CNG/LPG BKR-GAS 7987 İnce Paso Kalem Buji",
                            ImageUrl = "placeholder.jpg",
                            IsDeleted = false,
                            IsOfferable = true,
                            IsSold = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2480),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2480),
                            Name = "Ngk Ateşleme Lpg Buji Takımı",
                            Price = 358m,
                            PurchasingUserId = 0,
                            UsageId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 3,
                            ColorId = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2482),
                            Description = "On Fren Dısk Havalandırmalı Bmw 1 Serısı E81 E82 E87 E88 03-12 3 Serısı E90 E91 318d 318ı 320sı 320d 320ı 325sı 325xı 05-11 Bosch 0986479216",
                            ImageUrl = "placeholder.jpg",
                            IsDeleted = false,
                            IsOfferable = false,
                            IsSold = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2483),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(2483),
                            Name = "Bosch On Fren Dısk+Balata Set Ferrari",
                            Price = 657m,
                            PurchasingUserId = 0,
                            UsageId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Usage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedAt")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastActivity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6116),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6117),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6117),
                            Name = "Sıfır"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 1,
                            CreatedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6120),
                            IsDeleted = false,
                            LastActivity = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6121),
                            ModifiedDate = new DateTime(2022, 8, 20, 10, 2, 56, 699, DateTimeKind.Utc).AddTicks(6120),
                            Name = "İkinci El"
                        });
                });

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("CarPartsMarketplace.Core.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPartsMarketplace.Core.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Offer", b =>
                {
                    b.HasOne("CarPartsMarketplace.Entities.Product", null)
                        .WithMany("Offers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Product", b =>
                {
                    b.HasOne("CarPartsMarketplace.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("CarPartsMarketplace.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPartsMarketplace.Entities.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId");

                    b.HasOne("CarPartsMarketplace.Entities.Usage", "Usage")
                        .WithMany("Products")
                        .HasForeignKey("UsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPartsMarketplace.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Usage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("CarPartsMarketplace.Core.Entities.User", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Product", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("CarPartsMarketplace.Entities.Usage", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
